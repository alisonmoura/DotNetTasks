@model DotNetTask.Web.ViewModel.CreateTaskViewModel
@{
    ViewData["Title"] = Model.EditMode ? "Edit Task" : "New Task";
    ViewData["SaveBtnTitle"] = Model.EditMode ? "Save Changes" : "Create";
}
@if (Model.ShowError)
{
    <div class="alert alert-danger d-flex justify-content-between animate__animated animate__faster animate__fadeInDown"
        role="alert">
        @Model.Message
        <span aria-hidden="true" style="cursor: pointer;" onclick="closeAlert()">&times;</span>
    </div>
}
<div class="text-center">
    <h1 class="display-4">üéØ @ViewData["Title"]</h1>
</div>
<div class="container">
    <form class="row" method="post" asp-action="Save" asp-controller="CreateTask">
        <!-- Id -->
        <div class="form-group col col-3 col-lg-1 mt-2">
            <label for="inputId">Id</label>
            <input type="text" class="form-control" id="inputId" placeholder="Id" value="@Model.Id" disabled>
        </div>
        <!-- Title -->
        <div class="form-group col col-9 col-lg-9 mt-2">
            <label for="inputTitle">Title</label>
            <input type="text"
                class="form-control animate__animated animate__faster @(@Model.ErrorFields.ContainsKey("Title") ? "border-danger animate__headShake" : "")"
                id="inputTitle" placeholder="Title" name="Title" value="@Model.Title">
            @if (Model.ErrorFields.ContainsKey("Title"))
            {
                <span class="text-danger">
                    @String.Join(", ", Model.ErrorFields.GetValueOrDefault("Title") ?? [])
                </span>
            }
        </div>
        <!-- Due Date -->
        <div class="form-group col col-12 col-lg-2 mt-2">
            <label for="inputDueDate">Due date</label>
            <input type="date" class="form-control" id="inputDueDate" placeholder="Due date" name="DueDate"
                value="@Model.DueDateFmt">
        </div>
        <!-- Status -->
        @if (Model.EditMode)
        {
            <div class="form-group col col-12 col-lg-12 mt-2">
                <label for="selectStatus">Status</label>
                <select id="selectStatus" class="selectpicker form-control w-100" data-style="border" name="Status">
                    @foreach (var status in Model.StatusOptions)
                    {
                        @if (status.ToString() == Model.Status.ToString())
                        {
                            <option selected>@status</option>
                        }
                        else
                        {
                            <option>@status</option>
                        }
                    }
                </select>
            </div>
        }
        <!-- Description -->
        <div class="form-group col col-12 mt-2">
            <label for="textAreaDescription">Description</label>
            <textarea class="form-control" id="textAreaDescription" placeholder="Description" style="min-height: 200px;"
                name="Description">@Model.Description</textarea>
        </div>
        <!-- Done -->
        @if (!Model.EditMode)
        {
            <div class="form-check d-flex justify-content-end mt-2">
                <input type="checkbox" class="form-check-input" id="checkDone" name="MarkAsDone">
                <label class="form-check-label ms-2" for="checkDone">Mark as done</label>
            </div>
        }
        <!-- Mode (hidden) -->
        <input type="hidden" name="Mode" value="@(Model.EditMode ? "Edit" : "New")">
        <!-- Id (hidden) -->
        <input type="hidden" name="Id" value="@Model.Id">
        <!-- Buttons -->
        <div class="d-flex flex-wrap mt-3">
            <button type="submit" class="btn btn-primary w-100">
                üíæ @ViewData["SaveBtnTitle"]
            </button>
            <button type="submit" class="btn btn-light mt-2 w-100" asp-controller="Home" asp-action="Index">
                üëà Back
            </button>
            @if (Model.EditMode)
            {
                <button type="button" class="btn btn-outline-danger mt-2 w-100"
                    onclick="location.href='@Url.Action("Delete", "CreateTask", new { Id = Model.Id })'">
                    üóëÔ∏è Remove
                </button>
            }
        </div>
    </form>
</div>
<script>
    function closeAlert() {
        document.querySelector(".alert").classList.add("animate__fadeOutUp");
        setTimeout(() => {
            document.querySelector(".alert").classList.add("d-none");
        }, 450);
    }
</script>